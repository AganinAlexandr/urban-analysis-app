#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import os

def check_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = 'urban_analysis_fixed.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print("=== –°–¢–†–£–ö–¢–£–†–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
    print(f"üìÅ –§–∞–π–ª: {db_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä: {os.path.getsize(db_path) / 1024:.1f} KB")
    print()
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        print(f"üìã –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        print()
        
        for table in tables:
            table_name = table[0]
            print(f"üìÑ –¢–∞–±–ª–∏—Ü–∞: {table_name}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"PRAGMA table_info({table_name})")
            columns = cursor.fetchall()
            
            print("   –°—Ç—Ä—É–∫—Ç—É—Ä–∞:")
            for col in columns:
                col_id, col_name, col_type, not_null, default_val, pk = col
                pk_str = " PRIMARY KEY" if pk else ""
                not_null_str = " NOT NULL" if not_null else ""
                print(f"     ‚Ä¢ {col_name} ({col_type}){not_null_str}{pk_str}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
            count = cursor.fetchone()[0]
            print(f"   üìä –ó–∞–ø–∏—Å–µ–π: {count}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏
        print("üîó –í–ù–ï–®–ù–ò–ï –ö–õ–Æ–ß–ò:")
        cursor.execute("PRAGMA foreign_key_list")
        foreign_keys = cursor.fetchall()
        
        if foreign_keys:
            for fk in foreign_keys:
                table_name, id, seq, fk_table, from_col, to_col, on_update, on_delete, match = fk
                print(f"   ‚Ä¢ {table_name}.{from_col} ‚Üí {fk_table}.{to_col}")
        else:
            print("   –ù–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        print("üìà –ò–ù–î–ï–ö–°–´:")
        cursor.execute("SELECT name, tbl_name, sql FROM sqlite_master WHERE type='index'")
        indexes = cursor.fetchall()
        
        if indexes:
            for idx in indexes:
                idx_name, tbl_name, sql = idx
                print(f"   ‚Ä¢ {idx_name} (—Ç–∞–±–ª–∏—Ü–∞: {tbl_name})")
        else:
            print("   –ù–µ—Ç –∏–Ω–¥–µ–∫—Å–æ–≤")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")

if __name__ == "__main__":
    check_database_structure() 