import sqlite3
import os

def clean_duplicates():
    db_path = "urban_analysis.db"
    
    print(f"üßπ –û—á–∏—â–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ –ë–î: {db_path}")
    
    conn = sqlite3.connect(db_path)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π
    cursor = conn.execute("""
        SELECT object_id, review_text, COUNT(*) as count
        FROM reviews
        GROUP BY object_id, review_text
        HAVING COUNT(*) > 1
    """)
    duplicates = cursor.fetchall()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –≥—Ä—É–ø–ø –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:")
    for dup in duplicates:
        print(f"  –û–±—ä–µ–∫—Ç ID: {dup[0]}, –¢–µ–∫—Å—Ç: {dup[1][:50]}..., –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {dup[2]}")
    
    if duplicates:
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å
        cursor = conn.execute("""
            DELETE FROM reviews 
            WHERE id NOT IN (
                SELECT MIN(id) 
                FROM reviews 
                GROUP BY object_id, review_text
            )
        """)
        
        deleted_count = cursor.rowcount
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {deleted_count} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor = conn.execute("SELECT COUNT(*) FROM reviews")
        remaining_count = cursor.fetchone()[0]
        print(f"üìã –û—Å—Ç–∞–ª–æ—Å—å {remaining_count} –æ—Ç–∑—ã–≤–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç
        cursor = conn.execute("""
            SELECT object_id, review_text, COUNT(*) as count
            FROM reviews
            GROUP BY object_id, review_text
            HAVING COUNT(*) > 1
        """)
        remaining_duplicates = cursor.fetchall()
        
        if remaining_duplicates:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –¥—É–±–ª–∏–∫–∞—Ç—ã: {len(remaining_duplicates)}")
        else:
            print(f"‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã")
    else:
        print(f"‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    conn.commit()
    conn.close()

if __name__ == "__main__":
    clean_duplicates() 