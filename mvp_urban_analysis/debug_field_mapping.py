#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –º–∞–ø–ø–∏–Ω–≥–æ–º –ø–æ–ª–µ–π –∏ —Ä–∞—Å—á–µ—Ç–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import pandas as pd
from app.core.data_processor import DataProcessor
from app.core.json_processor import JSONProcessor

def test_json_field_mapping():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π –≤ JSON –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ"""
    
    print("=== –¢–µ—Å—Ç –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π JSON ===")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–æ–ª–µ–π
    test_data = {
        'company_info': {
            'name': '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
            'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
            'group': 'school',
            'rating': 4.5
        },
        'company_reviews': [
            {
                'text': '–û—Ç–ª–∏—á–Ω—ã–π –æ—Ç–∑—ã–≤',
                'date': 1640995200,  # Unix timestamp
                'user_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'stars': 5,  # –ü–æ–ª–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è stars, –∞ –Ω–µ rating
                'answer': '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!'
            },
            {
                'text': '–•–æ—Ä–æ—à–∏–π –æ—Ç–∑—ã–≤',
                'date': 1641081600,
                'user_name': '–î—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'stars': 4,
                'answer': ''
            }
        ]
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π JSON —Ñ–∞–π–ª
    import json
    test_file = 'test_debug_mapping.json'
    with open(test_file, 'w', encoding='utf-8') as f:
        json.dump(test_data, f, ensure_ascii=False, indent=2)
    
    print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file}")
    print("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"  - –ü–æ–ª–µ —Ä–µ–π—Ç–∏–Ω–≥–∞: 'stars' (–∑–Ω–∞—á–µ–Ω–∏—è: 5, 4)")
    print(f"  - –ü–æ–ª–µ –æ—Ç–≤–µ—Ç–∞: 'answer' (–∑–Ω–∞—á–µ–Ω–∏—è: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!', '')")
    print()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ JSON –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    json_processor = JSONProcessor()
    df = json_processor.process_json_file_or_directory(test_file)
    
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON:")
    print(f"  - –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
    print(f"  - –ó–∞–ø–∏—Å–µ–π: {len(df)}")
    
    if 'rating' in df.columns:
        print(f"  - –ü–æ–ª–µ 'rating': {df['rating'].tolist()}")
    else:
        print("  - –ü–æ–ª–µ 'rating' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
    
    if 'answer_text' in df.columns:
        print(f"  - –ü–æ–ª–µ 'answer_text': {df['answer_text'].tolist()}")
    else:
        print("  - –ü–æ–ª–µ 'answer_text' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    os.remove(test_file)
    
    return df

def test_completeness_calculation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π"""
    
    print("\n=== –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ ===")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–Ω–æ–π –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å—é
    test_data = {
        'group': ['school', 'hospital', 'pharmacy'],
        'name': ['–®–∫–æ–ª–∞ ‚Ññ1', '–ë–æ–ª—å–Ω–∏—Ü–∞ ‚Ññ2', '–ê–ø—Ç–µ–∫–∞ ‚Ññ3'],
        'address': ['—É–ª. –õ–µ–Ω–∏–Ω–∞, 1', '—É–ª. –ü—É—à–∫–∏–Ω–∞, 10', '—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞, 5'],
        'review_text': ['–û—Ç–∑—ã–≤ 1', '–û—Ç–∑—ã–≤ 2', '–û—Ç–∑—ã–≤ 3'],
        'rating': [5.0, None, 4.0],  # –û–¥–Ω–æ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        'answer_text': ['–û—Ç–≤–µ—Ç 1', None, ''],  # –û–¥–Ω–æ None, –æ–¥–Ω–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        'date': ['2024-01-15', '2024-01-16', '2024-01-17']
    }
    
    df = pd.DataFrame(test_data)
    
    print("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"  - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(df)}")
    print(f"  - –ü–æ–ª–µ 'rating': {df['rating'].tolist()}")
    print(f"  - –ü–æ–ª–µ 'answer_text': {df['answer_text'].tolist()}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
    processor = DataProcessor()
    completeness = processor._calculate_field_completeness(df)
    
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏:")
    for field, percentage in completeness.items():
        print(f"  - {field}: {percentage}%")
    
    return completeness

def test_archive_completeness():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∞—Ä—Ö–∏–≤–µ"""
    
    print("\n=== –¢–µ—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∞—Ä—Ö–∏–≤–µ ===")
    
    processor = DataProcessor()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤
    df = processor.load_archive()
    
    if df.empty:
        print("–ê—Ä—Ö–∏–≤ –ø—É—Å—Ç")
        return
    
    print(f"–ê—Ä—Ö–∏–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(df)} –∑–∞–ø–∏—Å–µ–π")
    print(f"–ö–æ–ª–æ–Ω–∫–∏ –≤ –∞—Ä—Ö–∏–≤–µ: {list(df.columns)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
    completeness = processor._calculate_field_completeness(df)
    
    print("\n–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π –≤ –∞—Ä—Ö–∏–≤–µ:")
    for field, percentage in completeness.items():
        print(f"  - {field}: {percentage}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—è latitude, longitude, district –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\n–ü—Ä–æ–±–ª–µ–º–∞: –ø–æ–ª—è latitude, longitude, district –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç 100% –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å")
    print("–≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ —ç—Ç–∏ –ø–æ–ª—è –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("–ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ü–û–õ–Ø–ú–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π JSON
    df_json = test_json_field_mapping()
    
    # –¢–µ—Å—Ç 2: –†–∞—Å—á–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
    completeness = test_completeness_calculation()
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –≤ –∞—Ä—Ö–∏–≤–µ
    test_archive_completeness()
    
    print("\n" + "=" * 50)
    print("üìã –í–´–í–û–î–´:")
    print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥ –ø–æ–ª—è 'stars' -> 'rating' –≤ JSON –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ")
    print("2. –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª–µ–π, –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –ø–æ–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main() 